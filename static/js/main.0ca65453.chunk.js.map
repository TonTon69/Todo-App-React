{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["ButtonStyled","styled","Button","p","isCompleted","css","Todo","todo","onCheckBtnClick","shouldFitContainer","iconAfter","className","onClick","id","primaryColor","name","TodoList","todoList","map","TODO_APP_STORAGE_KEY","App","useState","setTodoList","textInput","setTextInput","useEffect","storagedTodoList","localStorage","getItem","JSON","parse","setItem","stringify","onTextInputChange","useCallback","e","target","value","onAddBtnClick","v4","prevState","placeholder","elemAfterInput","isDisabled","appearance","padding","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAKMA,EAAeC,YAAOC,IAAPD,CAAH,iXAMR,SAACE,GAAD,OACEA,EAAEC,aACFC,YADA,2FAsBG,SAASC,EAAT,GAA0C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,gBACjC,OACI,cAACR,EAAD,CACII,YAAaG,EAAKH,YAClBK,oBAAkB,EAClBC,WACKH,EAAKH,aACF,sBACIO,UAAU,aACVC,QAAS,kBAAMJ,EAAgBD,EAAKM,KAFxC,SAII,cAAC,IAAD,CAAWC,aAAa,cATxC,SAcKP,EAAKQ,OC/CH,SAASC,EAAT,GAAkD,IAA9BC,EAA6B,EAA7BA,SAAUT,EAAmB,EAAnBA,gBACzC,OACI,mCACKS,EAASC,KAAI,SAACX,GAAD,OACV,cAACD,EAAD,CAEIC,KAAMA,EACNC,gBAAiBA,GAFZD,EAAKM,S,YCFxBM,EAAuB,WAgEdC,MA9Df,WACI,MAAgCC,mBAAS,IAAzC,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACN,IAAMC,EAAmBC,aAAaC,QAAQT,GAC1CO,GACAJ,EAAYO,KAAKC,MAAMJ,MAE5B,IAEHD,qBAAU,WACNE,aAAaI,QAAQZ,EAAsBU,KAAKG,UAAUf,MAC3D,CAACA,IAEJ,IAAMgB,EAAoBC,uBAAY,SAACC,GACnCX,EAAaW,EAAEC,OAAOC,SACvB,IAEGC,EAAgBJ,uBAClB,SAACC,GACGb,EAAY,CACR,CAAET,GAAI0B,cAAMxB,KAAMQ,EAAWnB,aAAa,IADnC,mBAEJa,KAEPO,EAAa,MAEjB,CAACP,EAAUM,IAGTf,EAAkB0B,uBAAY,SAACrB,GACjCS,GAAY,SAACkB,GAAD,OACRA,EAAUtB,KAAI,SAACX,GAAD,OACVA,EAAKM,KAAOA,EAAZ,2BAAsBN,GAAtB,IAA4BH,aAAa,IAASG,UAG3D,IAEH,OACI,qCACI,8DACA,cAAC,IAAD,CACIQ,KAAK,WACL0B,YAAY,uCACZC,eACI,cAAC,IAAD,CACIC,YAAapB,EACbqB,WAAW,UACXhC,QAAS0B,EAHb,qBAQJjC,IAAK,CAAEwC,QAAS,eAChBR,MAAOd,EACPuB,SAAUb,IAEd,cAACjB,EAAD,CAAUC,SAAUA,EAAUT,gBAAiBA,QC5D3DuC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.0ca65453.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@atlaskit/button\";\r\nimport styled, { css } from \"styled-components\";\r\nimport CheckIcon from \"@atlaskit/icon/glyph/check\";\r\n\r\nconst ButtonStyled = styled(Button)`\r\n    margin-top: 5px;\r\n    text-align: left;\r\n\r\n    &,\r\n    &:hover {\r\n        ${(p) =>\r\n            p.isCompleted &&\r\n            css`\r\n                text-decoration: line-through;\r\n            `}\r\n    }\r\n\r\n    &:hover {\r\n        .check-icon {\r\n            display: inline-block;\r\n        }\r\n    }\r\n\r\n    .check-icon {\r\n        display: none;\r\n\r\n        &:hover {\r\n            background-color: #e2e2e2;\r\n            border-radius: 3px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function Todo({ todo, onCheckBtnClick }) {\r\n    return (\r\n        <ButtonStyled\r\n            isCompleted={todo.isCompleted}\r\n            shouldFitContainer\r\n            iconAfter={\r\n                !todo.isCompleted && (\r\n                    <span\r\n                        className=\"check-icon\"\r\n                        onClick={() => onCheckBtnClick(todo.id)}\r\n                    >\r\n                        <CheckIcon primaryColor=\"#4fff4f\" />\r\n                    </span>\r\n                )\r\n            }\r\n        >\r\n            {todo.name}\r\n        </ButtonStyled>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"../components/Todo\";\r\n\r\nexport default function TodoList({ todoList, onCheckBtnClick }) {\r\n    return (\r\n        <>\r\n            {todoList.map((todo) => (\r\n                <Todo\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    onCheckBtnClick={onCheckBtnClick}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import Textfield from \"@atlaskit/textfield\";\nimport Button from \"@atlaskit/button\";\nimport TodoList from \"./components/TodoList\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\n\nconst TODO_APP_STORAGE_KEY = \"TODO_APP\";\n\nfunction App() {\n    const [todoList, setTodoList] = useState([]); //array\n    const [textInput, setTextInput] = useState(\"\"); //string\n\n    useEffect(() => {\n        const storagedTodoList = localStorage.getItem(TODO_APP_STORAGE_KEY);\n        if (storagedTodoList) {\n            setTodoList(JSON.parse(storagedTodoList));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(TODO_APP_STORAGE_KEY, JSON.stringify(todoList));\n    }, [todoList]);\n\n    const onTextInputChange = useCallback((e) => {\n        setTextInput(e.target.value); //lấy giá trị của người dùng nhập\n    }, []);\n\n    const onAddBtnClick = useCallback(\n        (e) => {\n            setTodoList([\n                { id: v4(), name: textInput, isCompleted: false }, //nội dung thêm mới phải ở trên danh sách cũ\n                ...todoList,\n            ]);\n            setTextInput(\"\"); //thêm thành công thì xóa nội dung trong thẻ input\n        },\n        [todoList, textInput]\n    );\n\n    const onCheckBtnClick = useCallback((id) => {\n        setTodoList((prevState) =>\n            prevState.map((todo) =>\n                todo.id === id ? { ...todo, isCompleted: true } : todo\n            )\n        );\n    }, []);\n\n    return (\n        <>\n            <h3>Danh sách cần làm</h3>\n            <Textfield\n                name=\"add-todo\"\n                placeholder=\"Thêm việc cần làm...\"\n                elemAfterInput={\n                    <Button\n                        isDisabled={!textInput}\n                        appearance=\"primary\"\n                        onClick={onAddBtnClick}\n                    >\n                        Thêm\n                    </Button>\n                }\n                css={{ padding: \"2px 4px 2px\" }}\n                value={textInput}\n                onChange={onTextInputChange}\n            ></Textfield>\n            <TodoList todoList={todoList} onCheckBtnClick={onCheckBtnClick} />\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}